@use "sass:map";
@use "sass:list";

/// Base on -zf-map-next https://github.com/zurb/foundation-sites/blob/develop/scss/util/_breakpoint.scss
/// Find the next key in a map.
/// @access private
///
/// @param {Map} $map - Map to traverse.
/// @param {Mixed} $key - Key to use as a starting point.
///
/// @returns {Mixed} The value for the key after `$key`, if `$key` was found. If `$key` was not found, or `$key` was the last value in the map, returns `null`.
@function map-next($map, $key, $return: 'value') {

  // Store the keys of the map as a list
  $values: map.keys($map);

  $i: 0;

  // If the Key Exists, Get the index of the key within the map and add 1 to it for the next breakpoint in the map
  @if (map.has-key($map, $key)) {
    $i: list.index($values, $key) + 1;
  }

  // If the key doesn't exist, or it's the last key in the map, return null
  @if ($i > list.length($map) or $i == 0) {
    @return null;
  }

  // Otherwise, return the value
  @else {
    @if $return == 'value' {
      @return map.get($map, list.nth($values, $i));
    } @else {
      @return list.nth($values, $i);
    }
  }
}

$default-font-size: 16px;

@function rem(
  $size,
  $base: $default-font-size
) {
  @return $size / $base * 1rem;
}

/// Get prefixed variant name
/// @param {String} $name - Variant name
/// @return {String} - Return a prefixed variant name or empty string, for default variants
/// @example scss
///   variant-name('primary') // 'primary'
///   variant-name('default') // ''
///
@function variant-name($name, $prefix: '--', $suffix: '') {
  @if not $name or $name == default or $name == xs {
    @return '';
  }

  @return #{$prefix + $name + $suffix};
}