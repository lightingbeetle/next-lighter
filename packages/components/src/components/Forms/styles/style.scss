@use "../../../tokens";
@use "../../../styles/utils";

.form-label {
  font-weight: 700;
  display: block;
  margin-bottom: tokens.space("s");
}

fieldset {
  margin-bottom: tokens.space("s");
  padding: 0;
  border: 0;

  .form-field:last-child {
    margin-bottom: 0;
  }

  legend.form-label {
    margin-bottom: tokens.space("s");
  }
}

.form-field {
  display: block;
  margin-bottom: tokens.space("s") - tokens.space("s");

  fieldset & {
    margin-bottom: tokens.space("s") - tokens.space("s");
  }

  .form-error {
    color: tokens.color("error");
    padding: tokens.space("s") tokens.space("s") 0;
  }

  select {
    /* resets */
    appearance: none;
    background-color: transparent;
    border: none;
    padding: 0 1em 0 0;
    margin: 0;
    width: 100%;
    font-family: inherit;
    font-size: inherit;
    cursor: inherit;
    line-height: inherit;
    /* IE remove arrow */
    &::-ms-expand {
      display: none;
    }
  }

  .select {
    position: relative;
    display: grid;
    grid-template-areas: "select";
    align-items: center;
    width: 100%;
    cursor: pointer;
    background-color: tokens.color("white");
    color: tokens.color("black");

    select {
      padding-right: 40px;
      overflow: hidden;
    }

    select,
    &::after {
      grid-area: select;
    }

    &::after {
      content: "";
      margin-right: 15px;
      width: 20px;
      height: 20px;
      background-image: url("../../../icons/chevron-down.svg");
      justify-self: end;
      pointer-events: none;
    }
  }

  input:not([type="checkbox"], [type="radio"]),
  select,
  textarea {
    width: 100%;
    max-width: 540px;
    padding: 9px 15px;
    border: 1px solid tokens.color("grey");
    border-radius: tokens.space("s");
    background-color: tokens.color("white");

    &[aria-invalid="true"] {
      border-color: tokens.color("error");
    }

    &:focus {
      // outline: none !important;
      border-color: tokens.color("primary");
    }

    .bg-primary &:focus {
      border-color: tokens.color("black");
    }
  }

  .form-radiocheck {
    display: flex;
    align-items: center;

    :first-child {
      margin-right: tokens.space("s");
    }
  }

  input:is([type="checkbox"], [type="radio"]) {
    width: 24px;
    height: 24px;
    position: relative;
    flex-shrink: 0;
    accent-color: tokens.color("primary");

    &::before,
    &::after {
      content: "";
      position: absolute;
      pointer-events: none;
    }
    &::before {
      background: tokens.color("white");
      border: 2px solid tokens.color("grey");
      width: 100%;
      height: 100%;
    }

    &:checked::before {
      background-color: tokens.color("primary");
      border-color: tokens.color("primary");
    }

    .bg-primary &::before {
      border-color: tokens.color("black");
    }

    .bg-primary &:checked::before {
      background-color: tokens.color("black");
    }

    &:checked::after {
      content: url("../../../icons/check-white.svg");
      color: tokens.color("white");
      top: calc(50%);
      left: 50%;
      transform: translate(-50%, -45%);
    }

    &[aria-invalid="true"]:before {
      border-color: tokens.color("error");
    }
  }

  input[type="radio"] {
    &::before,
    &::after {
      border-radius: 50%;
    }
    &:checked::after {
      content: "â€¢";
      font-size: 60px;
      transform: translate(-50%, -65%);
    }
  }

  .text-input[data-addon] {
    position: relative;
  }

  [data-addon] input {
    padding-right: tokens.space("s") + tokens.space("s");
  }

  .text-input[data-addon]::after {
    content: attr(data-addon);
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    right: tokens.space("s");
    font-weight: 700;
    background: white;
    height: 80%;
    display: flex;
    align-items: center;
  }

  &-radiocheck--toggle {
    input[type="checkbox"] {
      @include utils.visually-hidden;
    }

    span {
      display: flex;
      min-width: 30px;
      min-height: 30px;

      background-color: tokens.color("white");

      padding: tokens.space("s") tokens.space("s");

      border: 1px solid tokens.color("primary");
      border-radius: 20px;
      text-align: center;

      img {
        height: fit-content;
        align-self: center;
      }
    }

    input:checked + span {
      background-color: tokens.color("primary");
    }

    input:disabled + span {
      opacity: 0.5;
      border-color: tokens.color("white");
      pointer-events: none;
    }

    span:hover {
      border-color: tokens.color("black");
    }

    // show focus outline even when input itself is not visible
    input:focus-visible:focus-within + span {
      outline: 2px solid black;
    }
  }
}
